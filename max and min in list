class node:
    def __init__(self,value):
        self.value=value
        self.next=None

class single_linked_list:
    def __init__(self):
        self.head=None

    def create(self,value):
        newnode=node(value)
        if self.head ==None:
            print("\ncreating a new linked list ")
            self.head=newnode
        else:
            print("\nlist is already created so adding this number to the list ")

            temp=self.head
            while temp.next!=None:
                temp=temp.next
            temp.next=newnode
    def insert_at_begin(self,value):
        newnode=node(value)
        if self.head==None:
            self.head=newnode
        else:
            newnode.next=self.head
            self.head=newnode
    def insert_at_end(self,value):
        newnode = node(value)
        if self.head == None:
            self.head = newnode
        else:
            temp=self.head
            while temp.next!=None:
                temp=temp.next
            temp.next=newnode
    def check(self,value):
        temp=self.head
        count=0
        if temp==None:
            print("no list is present")
        else:
            while temp!=None:
                if temp.value ==value:
                    return count
                else:
                    count+=1
                    temp=temp.next
            return -1
    def display(self):
        temp=self.head
        if temp==None:
            print("\nno list is present ")
        else:
            while temp!=None:
                print(temp.value)
                temp=temp.next
    def max(self):
        if self.head==None:
            return -1
        else:
            temp = self.head
            max = temp.value
            while temp != None:
                if max < temp.value:
                    max = temp.value
                else:
                    temp = temp.next
            return max
    def min(self):
        if self.head==None:
            return -1
        else:
            temp = self.head
            min = temp.value
            while temp != None:
                if min > temp.value:
                    min = temp.value
                else:
                    temp = temp.next
            return min
 


obj=single_linked_list()
while True:
    n=int(input(" 1.to create the linked list \n 2.to display the linked list \n 3.to insert at the beginning \n 4.to insert at the end of the list \n 5.t check element is present or not \n 6.To find max element \n 7.To find min element \n 8.to exit from the program",))
    if n==1:
        value=int(input("enter the number "))
        obj.create(value)
    elif n==2:
        obj.display()
    elif n==3:
        value=int(input("enter the number"))
        obj.insert_at_begin(value)
    elif n==4:
        value=int(input("enter the number "))
        obj.insert_at_end(value)
    elif n==5:
        value=int(input("enter the value that you want to check"))
        check= obj.check(value)
        if check>=0:
            print(f'element fount at {check+1} index ')
        else:
            print("element not found")
    elif n==6:
        max=obj.max()
        if max>=0:
            print(f'max element in the list is {max}')
        else:
            print("no list is present")
    elif n==7:
        min=obj.min()
        if min >=0:
            print(f'min element in the list is {min}')
        else:
            print("no list is present")
    else:
        break
